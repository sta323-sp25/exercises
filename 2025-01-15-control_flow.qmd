---
format: html
---

## Exercise 1

### Part 1

```{r}
typeof( c(1, NA+1L, "C") )  # double, logical+integer = integer, character => character          
typeof( c(1L / 0, NA) )     # int / double = double, logical => double    
typeof( c(1:3, 5) )         # int, double => double   
typeof( c(3L, NaN+1L) )     # int, double + int = double => double       
typeof( c(NA, TRUE) )       # logical, logical => logical    
```

### Part 2

`logical` < `integer` < `double` < `character`

## Exercise 2
```{r}
f = function(x) {
  # Check small prime
  if (length(x) > 1) {
    stop("Input must have length 1")
  } else if (all(x > 10 | x < -10)) {
    stop("Input too big")
  } else if (x %in% c(2, 3, 5, 7)) {
    cat("Input is prime!\n")
  } else if (x %% 2 == 0) {
    cat("Input is even!\n")
  } else if (x %% 2 == 1) {
    cat("Input is odd!\n")
  }
}
```


```{r}
f(1)
f(3)
f(8)
f(-1)
f(-3)
f(1:2)
f("0")
f("3")
f("zero")
```
